{
  "meta": {
    "$_POST": [
      {
        "type": "text",
        "options": {
          "rules": {
            "core:required": {}
          }
        },
        "name": "steward_password"
      },
      {
        "type": "text",
        "name": "admin_username"
      },
      {
        "type": "text",
        "name": "admin_password"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "",
        "options": {
          "comment": "Used to reset the db tables"
        }
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{$_POST.admin_username!=null&&$_POST.admin_username.length()>0}}",
          "then": {
            "steps": {
              "name": "admin_username",
              "module": "core",
              "action": "setvalue",
              "options": {
                "value": "{{$_POST.admin_username.lowercase()}}"
              },
              "meta": [],
              "outputType": "text"
            }
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{$_POST.admin_password!=null&&$_POST.admin_password.length()>0}}",
          "then": {
            "steps": [
              {
                "name": "hash",
                "module": "crypto",
                "action": "passwordHash",
                "options": {
                  "password": "{{$_POST.admin_password}}",
                  "algo": "argon2id"
                },
                "outputType": "text"
              },
              {
                "name": "admin_password",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{hash}}"
                },
                "meta": [],
                "outputType": "text"
              }
            ]
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "module": "core",
        "action": "trycatch",
        "options": {
          "try": {
            "steps": [
              {
                "name": "get_admins",
                "module": "dbconnector",
                "action": "single",
                "options": {
                  "connection": "database",
                  "sql": {
                    "type": "SELECT",
                    "columns": [],
                    "params": [],
                    "table": {
                      "name": "users"
                    },
                    "primary": "id",
                    "joins": [
                      {
                        "table": "user_permissions",
                        "column": "*",
                        "type": "LEFT",
                        "clauses": {
                          "condition": "AND",
                          "rules": [
                            {
                              "table": "user_permissions",
                              "column": "userid",
                              "operator": "equal",
                              "value": {
                                "table": "users",
                                "column": "id"
                              },
                              "operation": "="
                            }
                          ]
                        },
                        "primary": "id"
                      }
                    ],
                    "query": "SELECT *\nFROM users\nLEFT JOIN user_permissions ON user_permissions.userid = users.id"
                  }
                },
                "meta": [
                  {
                    "type": "number",
                    "name": "id"
                  },
                  {
                    "type": "text",
                    "name": "username"
                  },
                  {
                    "type": "text",
                    "name": "password"
                  },
                  {
                    "type": "text",
                    "name": "status"
                  },
                  {
                    "type": "datetime",
                    "name": "created"
                  },
                  {
                    "type": "datetime",
                    "name": "updated"
                  }
                ],
                "outputType": "object"
              },
              {
                "name": "",
                "module": "core",
                "action": "condition",
                "options": {
                  "if": "{{get_admins.length()>0}}",
                  "then": {
                    "steps": [
                      "lib/userauth/restrict",
                      {
                        "name": "identity",
                        "module": "auth",
                        "action": "identify",
                        "options": {
                          "provider": "security"
                        },
                        "meta": []
                      },
                      {
                        "name": "get_admin_account",
                        "module": "dbconnector",
                        "action": "single",
                        "options": {
                          "connection": "database",
                          "sql": {
                            "type": "SELECT",
                            "columns": [
                              {
                                "table": "users",
                                "column": "username"
                              },
                              {
                                "table": "users",
                                "column": "password"
                              }
                            ],
                            "params": [
                              {
                                "operator": "equal",
                                "type": "expression",
                                "name": ":P1",
                                "value": "{{identity}}",
                                "test": ""
                              }
                            ],
                            "table": {
                              "name": "users"
                            },
                            "primary": "id",
                            "joins": [],
                            "wheres": {
                              "condition": "AND",
                              "rules": [
                                {
                                  "id": "users.id",
                                  "field": "users.id",
                                  "type": "double",
                                  "operator": "equal",
                                  "value": "{{identity}}",
                                  "data": {
                                    "table": "users",
                                    "column": "id",
                                    "type": "number",
                                    "columnObj": {
                                      "type": "increments",
                                      "default": "",
                                      "primary": true,
                                      "unique": true,
                                      "nullable": false,
                                      "name": "id"
                                    }
                                  },
                                  "operation": "="
                                }
                              ],
                              "conditional": null,
                              "valid": true
                            },
                            "query": "SELECT username, password\nFROM users\nWHERE id = :P1 /* {{identity}} */"
                          }
                        },
                        "meta": [
                          {
                            "type": "text",
                            "name": "username"
                          },
                          {
                            "type": "text",
                            "name": "password"
                          }
                        ],
                        "outputType": "object"
                      },
                      {
                        "name": "admin_username",
                        "module": "core",
                        "action": "setvalue",
                        "options": {
                          "value": "{{get_admin_account.username}}"
                        },
                        "meta": [],
                        "outputType": "text"
                      },
                      {
                        "name": "admin_password",
                        "module": "core",
                        "action": "setvalue",
                        "options": {
                          "value": "{{get_admin_account.password}}"
                        },
                        "meta": [],
                        "outputType": "text"
                      }
                    ]
                  }
                },
                "outputType": "boolean"
              }
            ]
          }
        }
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{$_ENV.STEWARD_PASSWORD!=null&&$_ENV.STEWARD_PASSWORD.length()>0&&$_ENV.STEWARD_PASSWORD==$_POST.steward_password}}",
          "then": {
            "steps": {
              "name": "",
              "module": "core",
              "action": "condition",
              "options": {
                "if": "{{admin_username==null||admin_username.length()==0}}",
                "then": {
                  "steps": {
                    "name": "message",
                    "module": "core",
                    "action": "setvalue",
                    "options": {
                      "value": "Missing value admin_username"
                    },
                    "meta": [],
                    "output": true,
                    "outputType": "text"
                  }
                },
                "else": {
                  "steps": {
                    "name": "",
                    "module": "core",
                    "action": "condition",
                    "options": {
                      "if": "{{admin_password==null||admin_password.length()==0}}",
                      "then": {
                        "steps": {
                          "name": "message",
                          "module": "core",
                          "action": "setvalue",
                          "options": {
                            "value": "Missing value admin_password"
                          },
                          "meta": [],
                          "output": true,
                          "outputType": "text"
                        }
                      },
                      "else": {
                        "steps": [
                          {
                            "name": "",
                            "module": "core",
                            "action": "trycatch",
                            "options": {
                              "try": {
                                "steps": {
                                  "name": "",
                                  "module": "auth",
                                  "action": "logout",
                                  "options": {
                                    "provider": "security"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "name": "drop_users_table",
                            "module": "dbupdater",
                            "action": "custom",
                            "options": {
                              "connection": "database",
                              "sql": {
                                "query": "DROP TABLE IF EXISTS users;",
                                "params": []
                              }
                            },
                            "meta": []
                          },
                          {
                            "name": "create_users_table",
                            "module": "dbupdater",
                            "action": "custom",
                            "options": {
                              "connection": "database",
                              "sql": {
                                "query": "CREATE TABLE IF NOT EXISTS users\n(\n    id serial PRIMARY KEY,\n\tusername TEXT,\n\tpassword TEXT,\n\tstatus TEXT,\n\tcreated TIMESTAMP,\n\tupdated TIMESTAMP\n);",
                                "params": []
                              }
                            },
                            "meta": [],
                            "outputType": "array"
                          },
                          {
                            "name": "drop_user_actions_table",
                            "module": "dbupdater",
                            "action": "custom",
                            "options": {
                              "connection": "database",
                              "sql": {
                                "query": "DROP TABLE IF EXISTS user_actions;",
                                "params": []
                              }
                            },
                            "meta": []
                          },
                          {
                            "name": "create_user_actions_table",
                            "module": "dbupdater",
                            "action": "custom",
                            "options": {
                              "connection": "database",
                              "sql": {
                                "query": "CREATE TABLE IF NOT EXISTS user_actions\n(\n    id serial PRIMARY KEY,\n\tusername TEXT,\n\tpassword TEXT,\n  \tkey TEXT,\n  \tstatus TEXT,\n\tcreated TIMESTAMP,\n\tupdated TIMESTAMP\n);",
                                "params": []
                              }
                            },
                            "meta": []
                          },
                          {
                            "name": "drop_permissions_table",
                            "module": "dbupdater",
                            "action": "custom",
                            "options": {
                              "connection": "database",
                              "sql": {
                                "query": "DROP TABLE IF EXISTS user_permissions;",
                                "params": []
                              }
                            },
                            "meta": []
                          },
                          {
                            "name": "create_permissions_table",
                            "module": "dbupdater",
                            "action": "custom",
                            "options": {
                              "connection": "database",
                              "sql": {
                                "query": "CREATE TABLE IF NOT EXISTS user_permissions\n(\n    id serial PRIMARY KEY,\n\tuserid INT,\n\trole TEXT,\n\tcreated TIMESTAMP,\n\tupdated TIMESTAMP\n);",
                                "params": []
                              }
                            },
                            "meta": []
                          },
                          {
                            "name": "drop_user_logs_table",
                            "module": "dbupdater",
                            "action": "custom",
                            "options": {
                              "connection": "database",
                              "sql": {
                                "query": "DROP TABLE IF EXISTS user_logs;",
                                "params": []
                              }
                            },
                            "meta": []
                          },
                          {
                            "name": "create_user_logs_table",
                            "module": "dbupdater",
                            "action": "custom",
                            "options": {
                              "connection": "database",
                              "sql": {
                                "query": "CREATE TABLE IF NOT EXISTS user_logs\n(\n    id serial PRIMARY KEY,\n\tuserid INT,\n\tactivity TEXT,\n\tdata TEXT,\n\tcreated TIMESTAMP\n);",
                                "params": []
                              }
                            },
                            "meta": []
                          },
                          {
                            "name": "insert_admin_account",
                            "module": "dbupdater",
                            "action": "insert",
                            "options": {
                              "connection": "database",
                              "sql": {
                                "type": "insert",
                                "values": [
                                  {
                                    "table": "users",
                                    "column": "username",
                                    "type": "text",
                                    "value": "{{admin_username}}"
                                  },
                                  {
                                    "table": "users",
                                    "column": "password",
                                    "type": "text",
                                    "value": "{{admin_password}}"
                                  },
                                  {
                                    "table": "users",
                                    "column": "created",
                                    "type": "datetime",
                                    "value": "NOW()"
                                  },
                                  {
                                    "table": "users",
                                    "column": "updated",
                                    "type": "datetime",
                                    "value": "NOW()"
                                  }
                                ],
                                "table": "users",
                                "returning": "id",
                                "query": "INSERT INTO users\n(username, password, created, updated) VALUES (:P1 /* {{admin_username}} */, :P2 /* {{admin_password}} */, 'NOW()', 'NOW()')",
                                "params": [
                                  {
                                    "name": ":P1",
                                    "type": "expression",
                                    "value": "{{admin_username}}",
                                    "test": ""
                                  },
                                  {
                                    "name": ":P2",
                                    "type": "expression",
                                    "value": "{{admin_password}}",
                                    "test": ""
                                  }
                                ]
                              }
                            },
                            "meta": [
                              {
                                "name": "identity",
                                "type": "text"
                              },
                              {
                                "name": "affected",
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "name": "insert_admin_permission",
                            "module": "dbupdater",
                            "action": "insert",
                            "options": {
                              "connection": "database",
                              "sql": {
                                "type": "insert",
                                "values": [
                                  {
                                    "table": "user_permissions",
                                    "column": "userid",
                                    "type": "number",
                                    "value": "{{insert_admin_account.identity}}"
                                  },
                                  {
                                    "table": "user_permissions",
                                    "column": "role",
                                    "type": "text",
                                    "value": "admin"
                                  },
                                  {
                                    "table": "user_permissions",
                                    "column": "created",
                                    "type": "datetime",
                                    "value": "NOW()"
                                  },
                                  {
                                    "table": "user_permissions",
                                    "column": "updated",
                                    "type": "datetime",
                                    "value": "NOW()"
                                  }
                                ],
                                "table": "user_permissions",
                                "returning": "id",
                                "query": "INSERT INTO user_permissions\n(userid, role, created, updated) VALUES (:P1 /* {{insert_admin_account.identity}} */, 'admin', 'NOW()', 'NOW()')",
                                "params": [
                                  {
                                    "name": ":P1",
                                    "type": "expression",
                                    "value": "{{insert_admin_account.identity}}",
                                    "test": ""
                                  }
                                ]
                              }
                            },
                            "meta": [
                              {
                                "name": "identity",
                                "type": "text"
                              },
                              {
                                "name": "affected",
                                "type": "number"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "outputType": "boolean"
                  }
                }
              },
              "outputType": "boolean"
            }
          },
          "else": {
            "steps": [
              {
                "name": "",
                "module": "core",
                "action": "trycatch",
                "options": {
                  "try": {
                    "steps": {
                      "name": "log_unauthorized_reset_request",
                      "module": "dbupdater",
                      "action": "insert",
                      "options": {
                        "connection": "database",
                        "sql": {
                          "type": "insert",
                          "values": [
                            {
                              "table": "user_logs",
                              "column": "activity",
                              "type": "text",
                              "value": "Unauthorized database reset request"
                            },
                            {
                              "table": "user_logs",
                              "column": "data",
                              "type": "text",
                              "value": "Incorrect steward password"
                            },
                            {
                              "table": "user_logs",
                              "column": "created",
                              "type": "datetime",
                              "value": "NOW()"
                            },
                            {
                              "table": "user_logs",
                              "column": "userid",
                              "type": "number",
                              "value": "{{identity}}"
                            }
                          ],
                          "table": "user_logs",
                          "returning": "id",
                          "query": "INSERT INTO user_logs\n(activity, data, created, userid) VALUES ('Unauthorized database reset request', 'Incorrect steward password', 'NOW()', :P1 /* {{identity}} */)",
                          "params": [
                            {
                              "name": ":P1",
                              "type": "expression",
                              "value": "{{identity}}",
                              "test": ""
                            }
                          ]
                        }
                      },
                      "meta": [
                        {
                          "name": "identity",
                          "type": "text"
                        },
                        {
                          "name": "affected",
                          "type": "number"
                        }
                      ]
                    }
                  }
                }
              },
              {
                "name": "",
                "module": "core",
                "action": "response",
                "options": {
                  "status": 401,
                  "data": "Stewardship password is incorrect"
                }
              }
            ]
          }
        },
        "outputType": "boolean"
      }
    ]
  },
  "usedModules": {
    "argon2": "^0.30.2"
  }
}